{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshuppal/Documents/GitHub/GPT-songwriter/src/components/Structure.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, ListGroup, Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Structure = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const handleAddItem = item => {\n    if (item.length > 4) {\n      alert(\"You can only have 5 sections.\");\n    } else {\n      setItems([...items, item]);\n    }\n  };\n  const handleRemoveItem = index => {\n    const newItems = [...items];\n    newItems.splice(index, 1);\n    setItems(newItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Structure\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"Structure--container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleAddItem('Verse'),\n        children: \"Verse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleAddItem('Chorus'),\n        children: \"Chorus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleAddItem('Bridge'),\n        children: \"Bridge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"Structure--list\",\n        children: items.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [item, /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleRemoveItem(index),\n            variant: \"danger\",\n            size: \"sm\",\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Structure, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = Structure;\nexport default Structure;\nvar _c;\n$RefreshReg$(_c, \"Structure\");","map":{"version":3,"names":["React","useState","Button","ListGroup","Container","Structure","items","setItems","handleAddItem","item","length","alert","handleRemoveItem","index","newItems","splice","map"],"sources":["/Users/utkarshuppal/Documents/GitHub/GPT-songwriter/src/components/Structure.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport { Button, ListGroup, Container } from 'react-bootstrap';\n\nconst Structure = () => {\n  const [items, setItems] = useState([]);\n\n  const handleAddItem = (item) => {\n    if(item.length > 4) {\n      alert(\"You can only have 5 sections.\")\n    } else {\n      setItems([...items, item]);\n    }\n  };\n\n  const handleRemoveItem = (index) => {\n    const newItems = [...items];\n    newItems.splice(index, 1);\n    setItems(newItems);\n  };\n\n  return (\n    <div className=\"Structure\">\n      <Container className='Structure--container'>\n        <Button onClick={() => handleAddItem('Verse')}>Verse</Button>\n        <Button onClick={() => handleAddItem('Chorus')}>Chorus</Button>\n        <Button onClick={() => handleAddItem('Bridge')}>Bridge</Button>\n\n        <ListGroup className='Structure--list'>\n          {items.map((item, index) => (\n            <ListGroup.Item key={index}>\n              {item}\n              <Button\n                onClick={() => handleRemoveItem(index)}\n                variant=\"danger\"\n                size=\"sm\"\n              >\n                x\n              </Button>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      </Container>\n    </div>\n  );\n};\n\n\nexport default Structure;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,QAAQ,iBAAiB;AAAC;AAE/D,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMO,aAAa,GAAIC,IAAI,IAAK;IAC9B,IAAGA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MAClBC,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,MAAM;MACLJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEG,IAAI,CAAC,CAAC;IAC5B;EACF,CAAC;EAED,MAAMG,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,QAAQ,GAAG,CAAC,GAAGR,KAAK,CAAC;IAC3BQ,QAAQ,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACzBN,QAAQ,CAACO,QAAQ,CAAC;EACpB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBACxB,QAAC,SAAS;MAAC,SAAS,EAAC,sBAAsB;MAAA,wBACzC,QAAC,MAAM;QAAC,OAAO,EAAE,MAAMN,aAAa,CAAC,OAAO,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe,eAC7D,QAAC,MAAM;QAAC,OAAO,EAAE,MAAMA,aAAa,CAAC,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eAC/D,QAAC,MAAM;QAAC,OAAO,EAAE,MAAMA,aAAa,CAAC,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eAE/D,QAAC,SAAS;QAAC,SAAS,EAAC,iBAAiB;QAAA,UACnCF,KAAK,CAACU,GAAG,CAAC,CAACP,IAAI,EAAEI,KAAK,kBACrB,QAAC,SAAS,CAAC,IAAI;UAAA,WACZJ,IAAI,eACL,QAAC,MAAM;YACL,OAAO,EAAE,MAAMG,gBAAgB,CAACC,KAAK,CAAE;YACvC,OAAO,EAAC,QAAQ;YAChB,IAAI,EAAC,IAAI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAGF;QAAA,GARUA,KAAK;UAAA;UAAA;UAAA;QAAA,QAU3B;MAAC;QAAA;QAAA;QAAA;MAAA,QACQ;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACR;AAEV,CAAC;AAAC,GAzCIR,SAAS;AAAA,KAATA,SAAS;AA4Cf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}