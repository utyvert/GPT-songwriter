{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'https://api.openai.com/v1/completions';\nexport async function GPT3(prompt) {\n  try {\n    const response = await axios.post(API_URL, {\n      prompt: prompt,\n      max_tokens: 256,\n      n: 1,\n      temperature: 0.5\n    }, {\n      params: {\n        api_key: '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'\n      }\n    });\n    const generatedText = response.data.choices[0].text;\n    return generatedText;\n  } catch (error) {\n    console.error(error);\n  }\n}\n_c = GPT3;\nvar _c;\n$RefreshReg$(_c, \"GPT3\");","map":{"version":3,"names":["axios","API_URL","GPT3","prompt","response","post","max_tokens","n","temperature","params","api_key","generatedText","data","choices","text","error","console"],"sources":["/Users/utkarshuppal/Documents/GitHub/GPT-songwriter/src/components/GPT3.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.openai.com/v1/completions';\n\nexport async function GPT3(prompt) {\n  try {\n    const response = await axios.post(API_URL, {\n      prompt: prompt,\n      max_tokens: 256,\n      n: 1,\n      temperature: 0.5,\n    }, {\n      params: {\n        api_key: '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',\n      }\n    });\n\n    const generatedText = response.data.choices[0].text;\n    return generatedText;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uCAAuC;AAEvD,OAAO,eAAeC,IAAI,CAACC,MAAM,EAAE;EACjC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,OAAO,EAAE;MACzCE,MAAM,EAAEA,MAAM;MACdG,UAAU,EAAE,GAAG;MACfC,CAAC,EAAE,CAAC;MACJC,WAAW,EAAE;IACf,CAAC,EAAE;MACDC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX;IACF,CAAC,CAAC;IAEF,MAAMC,aAAa,GAAGP,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;IACnD,OAAOH,aAAa;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF;AAAC,KAlBqBb,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}