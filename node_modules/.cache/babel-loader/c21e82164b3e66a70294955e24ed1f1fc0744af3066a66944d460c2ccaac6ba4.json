{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshuppal/Documents/GitHub/GPT-songwriter/src/components/AddTopicComponent.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useRef, useEffect } from 'react';\nimport { Router, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddTopicComponent() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [list, setList] = useState([]);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    const handleInputKeyPress = event => {\n      if (event.key === 'Enter') {\n        // Perform the button's action\n      }\n    };\n\n    // Add event listener for \"keypress\" on the input element\n    inputRef.current.addEventListener('keypress', handleInputKeyPress);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      inputRef.current.removeEventListener('keypress', handleInputKeyPress);\n    };\n  }, []); // Empty array ensures the effect only runs on mount and unmount\n\n  const handleClick = () => {\n    // Add the inputValue to the list\n    setList([...list, inputValue]);\n\n    // Clear the input box\n    setInputValue('');\n  };\n  const clearList = () => {\n    setList([]);\n  };\n\n  // const [username, setUsername] = useState('');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ATC-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AddTopicComponent\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        className: \"AddTopicComponent--name\",\n        placeholder: \"Topic\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"AddTopicComponent--button\",\n        onClick: handleClick,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => clearList(),\n        className: \"AddTopicComponent--xbutton\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 86\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ATC--list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTopicComponent, \"9sdN16fl3j5DjdyeepTh97aOm7M=\");\n_c = AddTopicComponent;\nvar _c;\n$RefreshReg$(_c, \"AddTopicComponent\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Router","Link","FontAwesomeIcon","faTimes","AddTopicComponent","inputValue","setInputValue","list","setList","inputRef","handleInputKeyPress","event","key","current","addEventListener","removeEventListener","handleClick","clearList","e","target","value","map","item"],"sources":["/Users/utkarshuppal/Documents/GitHub/GPT-songwriter/src/components/AddTopicComponent.js"],"sourcesContent":["import {React, useState, useRef, useEffect} from 'react'\nimport { Router, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nexport default function AddTopicComponent() {\n  \n  const [inputValue, setInputValue] = useState('');\n  const [list, setList] = useState([]);\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    const handleInputKeyPress = (event) => {\n      if (event.key === 'Enter') {\n        // Perform the button's action\n      }\n    }\n\n    // Add event listener for \"keypress\" on the input element\n    inputRef.current.addEventListener('keypress', handleInputKeyPress);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      inputRef.current.removeEventListener('keypress', handleInputKeyPress);\n    };\n  }, []); // Empty array ensures the effect only runs on mount and unmount\n\n\n  const handleClick = () => {\n    // Add the inputValue to the list\n    setList([...list, inputValue]);\n\n    \n\n    // Clear the input box\n    setInputValue('');\n  }\n\n  const clearList = () => {\n    setList([]);\n  }\n\n  // const [username, setUsername] = useState('');\n\n  return (\n    <div className=\"ATC-container\">\n      <div className=\"AddTopicComponent\">\n          <input ref={inputRef} type=\"text\" className='AddTopicComponent--name' placeholder='Topic'value={inputValue} onChange={e => setInputValue(e.target.value)}  />\n          <button className='AddTopicComponent--button' onClick={handleClick}>Add</button>\n          <button onClick={() => clearList()} className='AddTopicComponent--xbutton'><FontAwesomeIcon icon={faTimes} /></button>\n      </div>\n      <div className=\"ATC--list\">\n        <ul>\n          {list.map(item => (\n            <li key={item}>{item}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AACxD,SAASC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAC/C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,QAAQ,mCAAmC;AAAC;AAE5D,eAAe,SAASC,iBAAiB,GAAG;EAAA;EAE1C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACd,MAAMW,mBAAmB,GAAIC,KAAK,IAAK;MACrC,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;QACzB;MAAA;IAEJ,CAAC;;IAED;IACAH,QAAQ,CAACI,OAAO,CAACC,gBAAgB,CAAC,UAAU,EAAEJ,mBAAmB,CAAC;;IAElE;IACA,OAAO,MAAM;MACXD,QAAQ,CAACI,OAAO,CAACE,mBAAmB,CAAC,UAAU,EAAEL,mBAAmB,CAAC;IACvE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGR,MAAMM,WAAW,GAAG,MAAM;IACxB;IACAR,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEF,UAAU,CAAC,CAAC;;IAI9B;IACAC,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMW,SAAS,GAAG,MAAM;IACtBT,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;;EAED;;EAEA,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B;MAAK,SAAS,EAAC,mBAAmB;MAAA,wBAC9B;QAAO,GAAG,EAAEC,QAAS;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAC,yBAAyB;QAAC,WAAW,EAAC,OAAO;QAAA,KAAK,EAAEJ,UAAW;QAAC,QAAQ,EAAEa,CAAC,IAAIZ,aAAa,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAI,eAC7J;QAAQ,SAAS,EAAC,2BAA2B;QAAC,OAAO,EAAEJ,WAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eAChF;QAAQ,OAAO,EAAE,MAAMC,SAAS,EAAG;QAAC,SAAS,EAAC,4BAA4B;QAAA,uBAAC,QAAC,eAAe;UAAC,IAAI,EAAEd;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACpH,eACN;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB;QAAA,UACGI,IAAI,CAACc,GAAG,CAACC,IAAI,iBACZ;UAAA,UAAgBA;QAAI,GAAXA,IAAI;UAAA;UAAA;UAAA;QAAA,QACd;MAAC;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAxDuBlB,iBAAiB;AAAA,KAAjBA,iBAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}