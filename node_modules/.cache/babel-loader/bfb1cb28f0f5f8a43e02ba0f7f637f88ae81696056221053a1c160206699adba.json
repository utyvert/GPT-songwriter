{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshuppal/Documents/GitHub/GPT-songwriter/src/components/Structure.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, ListGroup, Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Structure = props => {\n  _s();\n  const [items, setItems] = useState([]);\n  const handleAddItem = item => {\n    if (items.length >= 5) {\n      alert(\"You can only have 5 sections.\");\n    } else {\n      // setItems([...items, item]);\n      const newItems = [...items, item];\n      props.updateItems(newItems);\n    }\n  };\n  const handleRemoveItem = index => {\n    const newItems = [...items];\n    newItems.splice(index, 1);\n    props.updateItems(newItems);\n  };\n  const handleClearAll = () => {\n    console.log(items);\n    props.updateItems([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Structure\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Structure--container-and-list\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"Structure--container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleAddItem('Verse'),\n          children: \"Verse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleAddItem('Chorus'),\n          children: \"Chorus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleAddItem('Bridge'),\n          children: \"Bridge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleClearAll,\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        horizontal: true,\n        className: \"Structure--list\",\n        children: items.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [item, /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleRemoveItem(index),\n            variant: \"danger\",\n            size: \"sm\",\n            style: {\n              padding: \"3px 7px 3px 7px\",\n              fontSize: \"0.8rem\"\n            },\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Structure, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = Structure;\nexport default Structure;\nvar _c;\n$RefreshReg$(_c, \"Structure\");","map":{"version":3,"names":["React","useState","Button","ListGroup","Container","Structure","props","items","setItems","handleAddItem","item","length","alert","newItems","updateItems","handleRemoveItem","index","splice","handleClearAll","console","log","map","padding","fontSize"],"sources":["/Users/utkarshuppal/Documents/GitHub/GPT-songwriter/src/components/Structure.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport { Button, ListGroup, Container } from 'react-bootstrap';\n\nconst Structure = (props) => {\n  const [items, setItems] = useState([]);\n\n  const handleAddItem = (item) => {\n    if(items.length >= 5) {\n      alert(\"You can only have 5 sections.\")\n    } else {\n      // setItems([...items, item]);\n      const newItems = [...items, item]\n      props.updateItems(newItems)\n    }\n  };\n\n\n\n  const handleRemoveItem = (index) => {\n    const newItems = [...items];\n    newItems.splice(index, 1);\n    props.updateItems(newItems)\n\n  };\n\n  const handleClearAll = () => {\n    console.log(items)\n    props.updateItems([])\n  };\n\n  return (\n    <div className=\"Structure\">\n    <div className=\"Structure--container-and-list\">\n      <Container className='Structure--container'>\n        <Button onClick={() => handleAddItem('Verse')}>Verse</Button>\n        <Button onClick={() => handleAddItem('Chorus')}>Chorus</Button>\n        <Button onClick={() => handleAddItem('Bridge')}>Bridge</Button>\n        <Button variant=\"danger\" onClick={handleClearAll}>Clear All</Button>\n      </Container>\n\n      <ListGroup horizontal className='Structure--list'>\n        {items.map((item, index) => (\n          <ListGroup.Item key={index}>\n            {item}\n            <Button\n              onClick={() => handleRemoveItem(index)}\n              variant=\"danger\"\n              size=\"sm\"\n              style={{ padding: \"3px 7px 3px 7px\", fontSize: \"0.8rem\" }}\n            >\n              x\n            </Button>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    </div>\n  </div>\n  );\n};\n\n\nexport default Structure;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,QAAQ,iBAAiB;AAAC;AAE/D,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,aAAa,GAAIC,IAAI,IAAK;IAC9B,IAAGH,KAAK,CAACI,MAAM,IAAI,CAAC,EAAE;MACpBC,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,MAAM;MACL;MACA,MAAMC,QAAQ,GAAG,CAAC,GAAGN,KAAK,EAAEG,IAAI,CAAC;MACjCJ,KAAK,CAACQ,WAAW,CAACD,QAAQ,CAAC;IAC7B;EACF,CAAC;EAID,MAAME,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMH,QAAQ,GAAG,CAAC,GAAGN,KAAK,CAAC;IAC3BM,QAAQ,CAACI,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACzBV,KAAK,CAACQ,WAAW,CAACD,QAAQ,CAAC;EAE7B,CAAC;EAED,MAAMK,cAAc,GAAG,MAAM;IAC3BC,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC;IAClBD,KAAK,CAACQ,WAAW,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBAC1B;MAAK,SAAS,EAAC,+BAA+B;MAAA,wBAC5C,QAAC,SAAS;QAAC,SAAS,EAAC,sBAAsB;QAAA,wBACzC,QAAC,MAAM;UAAC,OAAO,EAAE,MAAML,aAAa,CAAC,OAAO,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,eAC7D,QAAC,MAAM;UAAC,OAAO,EAAE,MAAMA,aAAa,CAAC,QAAQ,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB,eAC/D,QAAC,MAAM;UAAC,OAAO,EAAE,MAAMA,aAAa,CAAC,QAAQ,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB,eAC/D,QAAC,MAAM;UAAC,OAAO,EAAC,QAAQ;UAAC,OAAO,EAAES,cAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1D,eAEZ,QAAC,SAAS;QAAC,UAAU;QAAC,SAAS,EAAC,iBAAiB;QAAA,UAC9CX,KAAK,CAACc,GAAG,CAAC,CAACX,IAAI,EAAEM,KAAK,kBACrB,QAAC,SAAS,CAAC,IAAI;UAAA,WACZN,IAAI,eACL,QAAC,MAAM;YACL,OAAO,EAAE,MAAMK,gBAAgB,CAACC,KAAK,CAAE;YACvC,OAAO,EAAC,QAAQ;YAChB,IAAI,EAAC,IAAI;YACT,KAAK,EAAE;cAAEM,OAAO,EAAE,iBAAiB;cAAEC,QAAQ,EAAE;YAAS,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAGnD;QAAA,GATUP,KAAK;UAAA;UAAA;UAAA;QAAA,QAW3B;MAAC;QAAA;QAAA;QAAA;MAAA,QACQ;IAAA;MAAA;MAAA;MAAA;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QACF;AAER,CAAC;AAAC,GAvDIX,SAAS;AAAA,KAATA,SAAS;AA0Df,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}